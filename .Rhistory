install.packages("readr")
install.packages("readxl")
library(readxl)
library(dplyr)
# יצירת רשימה של כל קבצי האקסל בתיקייה
file_list <- list.files(path = "C:\Users\danas\OneDrive\Desktop\פסיכולוגיה- תואר שני\קורס R\Week_7\Collected_data", pattern = "\\.xlsx$", full.names = TRUE)
#### יצירת RAW DATA ----
library(dplyr)
# איגוד הקבצים לטבלת נתונים אחת
files_names = dir("./data/collected_data/")
# איגוד הקבצים לטבלת נתונים אחת
file_list <- list.files(path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data",
pattern = "\\.xlsx$", full.names = TRUE)
# איגוד הקבצים לטבלת נתונים אחת
file_list <- list.files(path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data",
pattern = "\\.xlsx$", full.names = TRUE)
df = data.frame()
for (file in files_names) {
df <- rbind(df, read.csv(paste0("C:\Users\danas\OneDrive\Desktop\פסיכולוגיה- תואר שני\קורס R\Week_7\Collected_data",file)))
# לולאה לקריאת כל הקבצים ואיחודם
for (file in files_names) {
# קריאת הקובץ והדבקתו ל-df
temp_data <- read_excel(paste0("C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data/", file))
df <- rbind(df, temp_data)
}
df <- rbind(df, read.csv(paste0("C:\Users\danas\OneDrive\Desktop\פסיכולוגיה- תואר שני\קורס R\Week_7\Collected_data",file)))
for (file in files_names) {
df <- rbind(df, read.csv(paste0("C:\Users\danas\OneDrive\Desktop\פסיכולוגיה- תואר שני\קורס R\Week_7\Collected_data",file)))
for (file in files_names) {
df <- rbind(df, read.csv(paste0("C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data/", file)))
}
df <- rbind(df, read.csv(paste0("C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data/", file)))
for (file in files_list) {
df <- rbind(df, read.csv(paste0("C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data/", file)))
}
for (file in file_list) {
df <- rbind(df, read.csv(paste0("C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data/", file)))
}
list.files(path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data")
file_list <- list.files(
path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data",
pattern = "\\.csv$",
full.names = TRUE
)
print(file_list)
file_list <- list.files(
path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data",
pattern = "\\.csv$",
full.names = TRUE  # נותן את הנתיב המלא של כל קובץ
)
# איגוד הקבצים לטבלת נתונים אחת
file_list <- list.files(path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data",
pattern = "\\.xlsx$", full.names = TRUE)
file_list <- list.files(
path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data",
pattern = "\\.csv$",
full.names = TRUE  # נותן את הנתיב המלא של כל קובץ
)
list.files(path = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/Collected_data")
df = data.frame()
for (file in file_list) {
temp_data <- read.csv(file)  # קריאה של קובץ CSV
df <- rbind(df, temp_data)   # הדבקת הנתונים ל-df
}
print(head(df))
print(dim(df))
# רק העמודות שצריך
df <- df |>
mutate(
task       = ifelse(grepl("ink_naming", condition), "ink_naming", "word_reading"),
congruency = ifelse(grepl("incong", condition), "incongruent", "congruent"),
acc        = ifelse(participant_response == correct_response, 1, 0)
) |>
select(participant_id, task, congruency, acc, reaction_time)
colnames(df)
# רק העמודות שצריך
df <- df |>
mutate(
task       = ifelse(grepl("ink_naming", condition), "ink_naming", "word_reading"),
congruency = ifelse(grepl("incong", condition), "incongruent", "congruent"),
acc        = ifelse(participant_response == correct_response, 1, 0)
) |>
select(subject, task, congruency, acc, rt)
df <- df |>
mutate(
subject    = as.factor(subject),
task       = as.factor(task),
congruency = as.factor(congruency),
block      = as.numeric(block),
trial      = as.numeric(trial),
acc        = as.numeric(acc),
rt         = as.numeric(rt)
) |>
select(subject, block, trial, task, congruency, participant_response, correct_response, acc, rt)
summary(df)
print(head(df))
df <- df |>
mutate(
block      = ceiling(row_number() / 20),  # יצירת עמודת block לפי קבוצות של 20 שורות
trial      = row_number(),               # יצירת עמודת trial כמספר השורה
subject    = as.factor(subject),
task       = as.factor(task),
congruency = as.factor(congruency),
acc        = as.numeric(ifelse(is.na(acc), 0, acc)),  # המרת NA ל-0 והגדרת acc לנומרי
rt         = as.numeric(rt)
) |>
select(subject, block, trial, task, congruency, participant_response, correct_response, acc, rt)
df <- df |>
mutate(
block      = ceiling(row_number() / 20),  # יצירת עמודת block לפי קבוצות של 20 שורות
trial      = row_number(),               # יצירת עמודת trial כמספר השורה
subject    = as.factor(subject),
task       = as.factor(task),
congruency = as.factor(congruency),
acc        = as.numeric(ifelse(is.na(acc), 0, acc)),  # המרת NA ל-0 והגדרת acc לנומרי
rt         = as.numeric(rt)
) |>
select(subject, block, trial, task, congruency, acc, rt)  # הוצאת עמודות שלא קיימות
print(head(df))
#check factors
contrasts(df$task)<-c(1,0)
contrasts(df$task)
contrasts(df$congruency)
save(df, file = "./data/raw_data.rdata")
save(df, file = "C:\Users\danas\OneDrive\Desktop\פסיכולוגיה- תואר שני\קורס R\Week_7")
getwd()
save(df, file = "C:/Users/danas/OneDrive/Desktop/פסיכולוגיה- תואר שני/קורס R/Week_7/week7")
save(df, file = "raw_data.rdata")
load("./data/raw_data.rdata")
list.files()
load("raw_data.rdata")
cat("Number of unique subjects:", length(unique(df$subject)))
df <- df |> filter(!is.na(rt))
cat("Number of unique subjects:", length(unique(df$subject)))
sum(is.na(df$rt))
# הוצאת הוציאו צעדים מעל 3 שניות או מתחת ל0.3 שניות
df <- df |> filter(rt >= 300 & rt <= 3000)
cat("Number of steps removed:", total_rows - remaining_rows)
df |>  group_by(subject) |> summarise(percentage = 1 - (n() / 400)) |>  print(n = Inf)
# חישוב אחוז של צעדים נוספים שנשארו
filtered_steps <- df |>
group_by(subject) |>
summarise(percentage = 1 - (n() / 400))
print(filtered_steps, n = Inf)
# חישוב ממוצע וסטיית תקן של אחוזי הצעדים שנשארו
mean_percentage <- mean(filtered_steps$percentage)
sd_percentage <- sd(filtered_steps$percentage)
cat("Mean percentage of steps removed:", mean_percentage, "\n")
cat("Standard deviation of steps removed:", sd_percentage, "\n")
save(df, file = "filtered_data.rdata")
